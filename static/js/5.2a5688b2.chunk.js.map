{"version":3,"sources":["components/CheckoutSummary/Order/Order.module.css","containers/Orders/Orders.module.css","components/CheckoutSummary/Order/Order.js","containers/Orders/Orders.js"],"names":["module","exports","Order","props","ingredients","ingredientName","push","name","amount","ingredientOutput","map","ig","key","className","classes","IngredientsListItem","icon","faHamburger","style","color","fontSize","IngredientsList","OrderPrice","Number","parseFloat","price","toFixed","connect","state","orders","order","loading","token","auth","userId","month","day","dispatch","onFetchOrders","actions","WithErrorHandler","useEffect","Spinner","id","OrdersContainer","OrdersTitle","Orders","axios"],"mappings":"iHACAA,EAAOC,QAAU,CAAC,MAAQ,qBAAqB,gBAAkB,+BAA+B,oBAAsB,mCAAmC,WAAa,4B,oBCAtKD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,YAAc,4BAA4B,OAAS,yB,qGC6CxGC,EAxCD,SAACC,GACb,IAAMC,EAAc,GACpB,IAAK,IAAIC,KAAkBF,EAAMC,YAC/BA,EAAYE,KAAK,CACfC,KAAMF,EACNG,OAAQL,EAAMC,YAAYC,KAI9B,IAAMI,EAAmBL,EAAYM,KAAI,SAACC,GACxC,OACE,yBACEC,IAAKD,EAAGJ,KACRM,UAAWC,IAAQC,qBAElBJ,EAAGJ,KAJN,KAIcI,EAAGH,OAJjB,QASJ,OACE,yBAAKK,UAAWC,IAAQZ,OACtB,kBAAC,IAAD,CACEc,KAAMC,IACNC,MAAO,CACLC,MAAO,UACPC,SAAU,UAGd,yBAAKP,UAAWC,IAAQO,iBACxB,2CACGZ,GAEH,uBAAGI,UAAWC,IAAQQ,YACpB,uCAAaC,OAAOC,WAAWrB,EAAMsB,OAAOC,QAAQ,O,kDCe7CC,uBAjBS,SAAAC,GACtB,MAAO,CACLC,OAAQD,EAAME,MAAMD,OACpBE,QAASH,EAAME,MAAMC,QACrBC,MAAOJ,EAAMK,KAAKD,MAClBE,OAAQN,EAAMK,KAAKC,OACnBC,MAAOP,EAAME,MAAMK,MACnBC,IAAKR,EAAME,MAAMM,QAIM,SAAAC,GACzB,MAAO,CACLC,cAAe,SAACN,EAAOE,GAAR,OAAmBG,EAASE,IAAoBP,EAAOE,QAI3DP,CAA6Ca,aA9C7C,SAACrC,GAAW,IACjBmC,EAAiCnC,EAAjCmC,cAAeN,EAAkB7B,EAAlB6B,MAAOE,EAAW/B,EAAX+B,OAE7BO,qBAAU,WACTH,EAAcN,EAAOE,KACnB,CAACI,EAAeN,EAAOE,IAEzB,IAAIL,EAAS,kBAACa,EAAA,EAAD,MAYb,OAXIvC,EAAM4B,UACRF,EACE1B,EAAM0B,OAAOnB,KAAI,SAACoB,GAAD,OACf,kBAAC,EAAD,CACElB,IAAKkB,EAAMa,GACXvC,YAAa0B,EAAM1B,YACnBqB,MAAOK,EAAML,YAMnB,yBAAKZ,UAAWC,IAAQ8B,iBACtB,uBAAG/B,UAAWC,IAAQ+B,aAAtB,gBACA,yBAAKhC,UAAWC,IAAQgC,QACrBjB,MAuB0EkB","file":"static/js/5.2a5688b2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Order\":\"Order_Order__3f-un\",\"IngredientsList\":\"Order_IngredientsList__2XNQN\",\"IngredientsListItem\":\"Order_IngredientsListItem__o8KI0\",\"OrderPrice\":\"Order_OrderPrice__2PzXu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"OrdersContainer\":\"Orders_OrdersContainer__1wxCB\",\"OrdersTitle\":\"Orders_OrdersTitle__b6pMW\",\"Orders\":\"Orders_Orders__3Zc7a\"};","import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHamburger } from '@fortawesome/free-solid-svg-icons';\r\n\r\nimport classes from \"./Order.module.css\";\r\n\r\nconst Order = (props) => {\r\n  const ingredients = [];\r\n  for (let ingredientName in props.ingredients) {\r\n    ingredients.push({\r\n      name: ingredientName,\r\n      amount: props.ingredients[ingredientName],\r\n    });\r\n  }\r\n\r\n  const ingredientOutput = ingredients.map((ig) => {\r\n    return (\r\n      <div\r\n        key={ig.name}\r\n        className={classes.IngredientsListItem}\r\n      >\r\n        {ig.name} ({ig.amount})\r\n      </div>\r\n    );\r\n  });\r\n\r\n  return (\r\n    <div className={classes.Order}>\r\n      <FontAwesomeIcon \r\n        icon={faHamburger} \r\n        style={{\r\n          color: \"#F2A30F\",\r\n          fontSize: \"30px\",\r\n        }}\r\n      />\r\n      <div className={classes.IngredientsList}>\r\n      <p>Ingredients:</p> \r\n        {ingredientOutput}\r\n      </div>\r\n      <p className={classes.OrderPrice}>\r\n        <strong>USD {Number.parseFloat(props.price).toFixed(2)}</strong>\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Order;\r\n","import React, { useEffect } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport Order from \"../../components/CheckoutSummary/Order/Order\";\r\nimport axios from \"../../axios-orders\";\r\nimport WithErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\";\r\nimport * as actions from \"../../store/actions/index\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport classes from \"./Orders.module.css\";\r\n\r\nconst Orders = (props) => {\r\n  const { onFetchOrders, token, userId } = props;\r\n  \r\n   useEffect(() => {\r\n    onFetchOrders(token, userId);\r\n   }, [onFetchOrders, token, userId]);\r\n\r\n    let orders = <Spinner />\r\n    if(!props.loading){\r\n      orders =\r\n        props.orders.map((order) => (\r\n          <Order\r\n            key={order.id}\r\n            ingredients={order.ingredients}\r\n            price={order.price}\r\n          />\r\n        ));\r\n    }\r\n    \r\n    return (\r\n      <div className={classes.OrdersContainer}>\r\n        <p className={classes.OrdersTitle}>Your Orders!</p>\r\n        <div className={classes.Orders}>\r\n          {orders}\r\n        </div>\r\n      </div>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    orders: state.order.orders,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n    month: state.order.month,\r\n    day: state.order.day,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onFetchOrders: (token, userId) => dispatch(actions.fetchOrders(token, userId)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(Orders, axios));\r\n"],"sourceRoot":""}