{"version":3,"sources":["components/UI/Input/Input.js","components/UI/Input/Input.module.css","components/CheckoutSummary/CheckoutSummary.module.css","containers/ContactData/ContactData.module.css","containers/Checkout/Checkout.module.css","components/CheckoutSummary/CheckoutSummary.js","containers/ContactData/ContactData.js","containers/Checkout/Checkout.js"],"names":["Input","props","inputElement","validationError","invalid","touched","inputClasses","classes","InputElement","shouldValidate","push","Invalid","elementType","className","join","elementConfig","value","onChange","changed","options","map","option","key","displayValue","Label","label","InputElementContainer","icon","style","color","borderRight","width","fontSize","padding","module","exports","CheckoutSummary","BurgerSummaryContainer","Burger","SummaryBurger","ingredients","connect","state","ings","burgerBuilder","price","totalPrice","loading","order","token","auth","userId","dispatch","onOrderBurger","orderData","actions","WithErrorHandler","history","useHistory","useState","name","type","placeholder","validation","required","valid","faUserCheck","street","faRoad","zipCode","minLength","maxLength","faMapMarkedAlt","phone","faMobileAlt","deliveryMethod","faBicycle","orderForm","setOrderForm","formIsValid","setFormIsValid","formElementsArray","id","config","form","FormContainer","onSubmit","event","preventDefault","formData","formElementIdentifier","formElement","inputIdentifier","updatedFormElement","updateObject","target","checkValidity","updatedOrderForm","inputChangeHandler","Button","disabled","btnType","Spinner","ContactDataContainer","ContactData","FormTitle","faMotorcycle","axios","purchased","summary","to","Checkout","Summary","checkoutCancelled","goBack","checkoutContinued","pathname"],"mappings":"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","file":"static/js/3.98532454.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\n\r\nimport classes from \"./Input.module.css\";\r\n\r\nconst Input = (props) => {\r\n  let inputElement = null;\r\n  let validationError = null;\r\n\r\n  if(props.invalid && props.touched){\r\n    validationError = <p><strong>Please enter a valid value</strong></p>\r\n  }\r\n\r\n  const inputClasses = [classes.InputElement];\r\n\r\n  if(props.invalid && props.shouldValidate && props.touched){\r\n    inputClasses.push(classes.Invalid);\r\n  }\r\n\r\n  switch (props.elementType) {\r\n    case \"input\":\r\n      inputElement = <input className={inputClasses.join(\" \")} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\r\n      break;\r\n    case \"textarea\":\r\n      inputElement = <textarea className={inputClasses.join(\" \")} {...props.elementConfig} value={props.value} onChange={props.changed}/>;\r\n      break;\r\n    case \"select\":\r\n      inputElement = (\r\n        <select\r\n        className={classes.InputElement} \r\n        value={props.value} onChange={props.changed}>\r\n         {props.elementConfig.options.map(option => (\r\n            <option key={option.value} value={option.value}> \r\n              {option.displayValue} \r\n            </option>\r\n          ))}\r\n        </select>\r\n        )\r\n      break;\r\n    default:\r\n      inputElement = <input className={inputClasses.join(\" \")} {...props.elementConfig} value={props.value}/>;\r\n  }\r\n\r\n  const iconStyle = {   \r\n    color:\"#f2a30f\",\r\n    borderRight: \"1px solid #f2f2f2\",\r\n    width: \"30px\",\r\n    fontSize: \"20px\",\r\n    padding: \"8px\",\r\n  }\r\n\r\n  return (\r\n    <div className={classes.Input}>\r\n      <label className={classes.Label}>{props.label}</label>\r\n      <div className={classes.InputElementContainer}>\r\n        {props.icon ? \r\n          <FontAwesomeIcon icon={props.icon} style={iconStyle}/>\r\n          : null\r\n        }\r\n        {inputElement}\r\n      </div>\r\n      {validationError}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Input\":\"Input_Input__1Jw2q\",\"Label\":\"Input_Label__bH7-f\",\"InputElementContainer\":\"Input_InputElementContainer__2N5hB\",\"InputElement\":\"Input_InputElement__1ZTnU\",\"Invalid\":\"Input_Invalid__2vryH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CheckoutSummary\":\"CheckoutSummary_CheckoutSummary__2hvei\",\"BurgerSummaryContainer\":\"CheckoutSummary_BurgerSummaryContainer__2vTlu\",\"BurgerSummary\":\"CheckoutSummary_BurgerSummary__1NkGX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ContactDataContainer\":\"ContactData_ContactDataContainer__23Dk9\",\"ContactData\":\"ContactData_ContactData__1i3Ld\",\"FormContainer\":\"ContactData_FormContainer__15U5y\",\"FormTitle\":\"ContactData_FormTitle__27XlW\",\"Input\":\"ContactData_Input__ZrD04\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Checkout\":\"Checkout_Checkout__1Y6_H\"};","import React from \"react\";\r\nimport Burger from \"../../components/Burger/Burger\";\r\n\r\nimport classes from \"./CheckoutSummary.module.css\";\r\n\r\nconst CheckoutSummary = (props) => {\r\n  return (\r\n    <div className={classes.CheckoutSummary}>\r\n      <div className={classes.BurgerSummaryContainer}>\r\n        <Burger \r\n          className={classes.SummaryBurger}\r\n          ingredients={props.ingredients}\r\n        />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CheckoutSummary;\r\n","import React, { useState } from \"react\";\r\nimport { Redirect, useHistory } from \"react-router-dom\";\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { \r\n  faMotorcycle, \r\n  faUserCheck,\r\n  faRoad,\r\n  faMapMarkedAlt,\r\n  faMobileAlt,\r\n  faBicycle,\r\n} from '@fortawesome/free-solid-svg-icons'\r\n\r\nimport Button from \"../../components/UI/Button/Button\";\r\nimport classes from \"./ContactData.module.css\";\r\nimport Spinner from \"../../components/UI/Spinner/Spinner\";\r\nimport axios from \"../../axios-orders\";\r\nimport Input from \"../../components/UI/Input/Input\";\r\nimport { connect } from \"react-redux\";\r\nimport WithErrorHandler from \"../../hoc/WithErrorHandler/WithErrorHandler\";\r\nimport { updateObject, checkValidity} from \"../../shared/utility\";\r\nimport * as actions from \"../../store/actions/index\";\r\n\r\n\r\nconst ContactData = (props) => {\r\n  const history = useHistory();\r\n  const [orderForm, setOrderForm] = useState({ \r\n    name: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type:\"text\",\r\n        placeholder: \"Your Name\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n      icon: faUserCheck,\r\n    },\r\n    street: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type:\"text\",\r\n        placeholder: \"Street\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n      icon: faRoad,\r\n    },\r\n    zipCode: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type:\"text\",\r\n        placeholder: \"ZIP Code\"\r\n      },\r\n\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 5,\r\n        maxLength: 5,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n      icon: faMapMarkedAlt,\r\n    },\r\n    phone: {\r\n      elementType: \"input\",\r\n      elementConfig: {\r\n        type:\"number\",\r\n        placeholder: \"Phone Number\"\r\n      },\r\n      value: \"\",\r\n      validation: {\r\n        required: true,\r\n        minLength: 10,\r\n        maxLength: 10,\r\n      },\r\n      valid: false,\r\n      touched: false,\r\n      icon: faMobileAlt,\r\n    },\r\n    deliveryMethod: {\r\n      elementType: \"select\",\r\n      elementConfig: {\r\n        options: [{value: \"fastest\", displayValue: \"Fastest\"},\r\n                  {value: \"cheapest\", displayValue: \"Cheapest\"}]\r\n      },\r\n      value: \"Fastest\",\r\n      validation: {},\r\n      valid: true,\r\n      icon: faBicycle,\r\n    },\r\n  });\r\n  \r\n  const [formIsValid, setFormIsValid] = useState(false)\r\n\r\n  const orderHandler = (event) => {\r\n    event.preventDefault();\r\n    const formData = {};\r\n    for(let formElementIdentifier in orderForm){\r\n      formData[formElementIdentifier] = orderForm[formElementIdentifier].value;\r\n    }\r\n\r\n    const order = {\r\n      ingredients: props.ings,\r\n      price: props.price,\r\n      orderData: formData,\r\n      userId: props.userId,\r\n    };\r\n      \r\n    props.onOrderBurger(order, props.token);\r\n    history.push(\"/\");\r\n  };\r\n\r\n  const formElementsArray = [];\r\n    for(let key in orderForm){\r\n      formElementsArray.push({\r\n        id: key,\r\n        config: orderForm[key],\r\n      });\r\n    };\r\n\r\n    const inputChangeHandler = (event, inputIdentifier) => {\r\n\r\n      const updatedFormElement = updateObject(orderForm[inputIdentifier], {\r\n        value: event.target.value,\r\n        valid: checkValidity(event.target.value, orderForm[inputIdentifier]),\r\n        touched: true,\r\n      });\r\n  \r\n      const updatedOrderForm = updateObject(orderForm, {\r\n        [inputIdentifier]: updatedFormElement,\r\n      });\r\n  \r\n      let formIsValid = true;\r\n  \r\n      for(let inputIdentifier in updatedOrderForm){\r\n        formIsValid = updatedOrderForm[inputIdentifier].valid && formIsValid;\r\n      }\r\n  \r\n      setOrderForm(updatedOrderForm);\r\n      setFormIsValid(formIsValid);\r\n    }  \r\n\r\n    let form = (\r\n      <form \r\n        className={classes.FormContainer}\r\n        onSubmit={orderHandler}\r\n      >\r\n        {formElementsArray.map(formElement => (\r\n          <Input \r\n            key={formElement.id}\r\n            icon={formElement.config.icon}\r\n            elementType={formElement.config.elementType}\r\n            elementConfig={formElement.config.elementConfig}\r\n            value={formElement.config.value} \r\n            invalid={!formElement.config.valid}\r\n            shouldValidate={formElement.config.validation}\r\n            touched={formElement.config.touched}\r\n            changed={(event) => inputChangeHandler(event, formElement.id)}\r\n          />\r\n        ))}\r\n        <Button disabled={!formIsValid} btnType=\"Success\">\r\n          ORDER\r\n        </Button>\r\n      </form>\r\n    );\r\n\r\n    if (props.loading) {\r\n      form = <Spinner />;\r\n    }\r\n\r\n    const iconStyle = {color: \"#f2a30f\", fontSize: \"32px\"}\r\n\r\n    return (\r\n      <div className={classes.ContactDataContainer}>\r\n        <div className={classes.ContactData}>\r\n          <div className={classes.FormTitle}>You're almost there!</div>\r\n            <FontAwesomeIcon \r\n              icon={faMotorcycle} \r\n              style={iconStyle}\r\n            />\r\n          {form}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    price: state.burgerBuilder.totalPrice,\r\n    loading: state.order.loading,\r\n    token: state.auth.token,\r\n    userId: state.auth.userId,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    onOrderBurger: (orderData, token) => dispatch(actions.purchaseBurger(orderData, token)),\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(WithErrorHandler(ContactData, axios));\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nimport CheckoutSummary from \"../../components/CheckoutSummary/CheckoutSummary\";\r\nimport ContactData from \"../ContactData/ContactData\";\r\n\r\nimport classes from \"./Checkout.module.css\";\r\n\r\nconst Checkout = (props) => {\r\n\r\n  const checkoutCancelledHandler = () => {\r\n    props.history.goBack();\r\n  };\r\n\r\n  const checkoutContinuedHandler = () => {\r\n    props.history.push({ pathname: \"/checkout/contact-data\" });\r\n  };\r\n\r\n    let summary = <Redirect to=\"/\" />\r\n    if(props.ings) {\r\n      summary = (\r\n        <div className={classes.Checkout}>\r\n          <CheckoutSummary\r\n            className={classes.Summary}\r\n            ingredients={props.ings}\r\n            checkoutCancelled={checkoutCancelledHandler}\r\n            checkoutContinued={checkoutContinuedHandler}\r\n          />\r\n          <ContactData className={classes.ContactData}/>\r\n        </div>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <div>\r\n        {summary}\r\n      </div>\r\n    )\r\n  }\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    ings: state.burgerBuilder.ingredients,\r\n    purchased: state.order.purchased,\r\n  }\r\n}\r\n\r\n\r\nexport default connect(mapStateToProps)(Checkout);"],"sourceRoot":""}